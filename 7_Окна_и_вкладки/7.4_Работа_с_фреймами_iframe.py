'''
Работа с фреймами iframe
iframe используется повсеместно для создания сайтов. Перейдите на сайт Яндекс.Карт и найдите там все фреймы,
изучите их содержимое. Можете пойти дальше и написать скрипт для извлечения данных из фрейма. Данная тема важная,
потому что необходимо уметь работать с фреймами, ведь большинство капч загружается именно во фреймы. Работа с
фреймами напоминает работу с alert-окнами, далее вы поймете разницу, ведь мы используем тот же самый синтаксис.

driver.switch_to.frame(iframe)
Если вы попытаетесь нажать на кнопку внутри iFrame с помощью selenium без переключения на этот iFrame, вы получите
ошибку. Selenium осведомлен только о элементах в документе верхнего уровня.

Другими словами, представьте себе веб-страницу как книгу. Основной документ страницы - это основной текст книги, а
фреймы - это как вставки или приложения в середине книги. Если вы не откроете и не посмотрите внутрь вставки, вы не
увидите содержимое этой вставки. Точно так же, если вы не переключитесь на фрейм в Selenium, вы не сможете
взаимодействовать с его содержимым.

Это может вызвать проблемы, особенно для новичков в автоматизации, потому что попытка взаимодействия с элементом
внутри фрейма без переключения на этот фрейм приведет к ошибке "элемент не найден".

Способы переключения на фрейм:

Используя WebElement: Это наиболее гибкий вариант. Вы можете найти фрейм с помощью вашего предпочтительного
селектора и переключиться на него.
iframe = driver.find_element(By.CSS_SELECTOR, "#modal > iframe")
driver.switch_to.frame(iframe)
driver.find_element(By.TAG_NAME, 'button').click()

Используя имя или ID: Если у вашего фрейма или iFrame есть атрибуты id или name, вы можете использовать их.
driver.switch_to.frame('buttonframe')
driver.find_element(By.TAG_NAME, 'button').click()

Используя индекс: Также можно использовать индекс фрейма.
driver.switch_to.frame(1)

Выход из фрейма: Чтобы выйти из iFrame или frameset, вернитесь к содержимому по умолчанию.
driver.switch_to.default_content()
Зачем нужен выход из фрейма?
Ограниченная область видимости: Когда вы находитесь внутри фрейма (или iFrame), ваша область видимости ограничена
только этим фреймом. Это означает, что вы не можете взаимодействовать с элементами вне этого фрейма.
Взаимодействие с основным содержимым: После завершения работы внутри фрейма, вам, возможно, потребуется
взаимодействовать с элементами основного документа. Чтобы это сделать, вы должны выйти из фрейма.
Переключение между фреймами: Если на странице есть несколько фреймов и вам нужно переключиться с одного фрейма на
другой, вы сначала должны вернуться к основному содержимому, прежде чем переключиться на другой фрейм.
Избегание ошибок: Если вы пытаетесь взаимодействовать с элементом, который находится вне текущего фрейма, без
выхода из этого фрейма, вы получите ошибку, такую как "NoSuchElementException". Чтобы избежать таких ошибок,
важно знать, в каком контексте (фрейме) вы находитесь, и при необходимости выходить из него.

Код ниже откроет страницу, переключится на фрейм получит всё HTML содержимое текущего фрейма.
'''
# from selenium import webdriver
# from selenium.webdriver.common.by import By
#
# with webdriver.Chrome() as driver:
#     driver.get('https://parsinger.ru/selenium/5.8/4/index.html')
#
#     # Переключаемся на iframe
#     iframe_element = driver.find_element(By.TAG_NAME, 'iframe')
#     driver.switch_to.frame(iframe_element)
#
#     # Извлекаем HTML содержимое из iframe
#     iframe_content = driver.page_source
#
#     print(iframe_content)
'''
Разберём код:
Переключение на iframe:

iframe_element = driver.find_element(By.TAG_NAME, 'iframe')
driver.switch_to.frame(iframe_element)
Сначала мы ищем элемент iframe на странице с помощью метода find_element и критерия поиска By.TAG_NAME. Это означает, 
что мы ищем первый попавшийся элемент с тегом iframe.
Затем мы переключаемся на этот iframe с помощью метода switch_to.frame(iframe_element). После этого все действия 
Selenium будут выполняться внутри этого iframe, как будто это основная страница.
Извлечение содержимого iframe:

iframe_content = driver.page_source
После переключения на iframe, метод page_source возвращает исходный HTML код текущей страницы, который в этом 
контексте является содержимым iframe.
'''